{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\testTask\\\\devToday\\\\test-devtoday\\\\pages\\\\posts\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Layout from '../components/MyLayout';\n\nvar loadData = function loadData(id) {\n  var response, data;\n  return _regeneratorRuntime.async(function loadData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id, \"?_embed=comments\")));\n\n        case 2:\n          response = _context.sent;\n          data = response.data;\n          return _context.abrupt(\"return\", data);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Post = function Post(props) {\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(props.show),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    var show;\n    return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            event.preventDefault();\n\n            if (value) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/comments', {\n              postId: post.id,\n              body: value\n            }));\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(loadData(post.id));\n\n          case 7:\n            show = _context2.sent;\n            setValue('');\n            setPost(show);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteComment = function deleteComment(event) {\n    var id, show;\n    return _regeneratorRuntime.async(function deleteComment$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = event.currentTarget.dataset.id;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios[\"delete\"](\"https://simple-blog-api.crew.red/comments/\".concat(id)));\n\n          case 3:\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(loadData(post.id));\n\n          case 5:\n            show = _context3.sent;\n            setPost(show);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"post__heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, post.title), __jsx(\"p\", {\n    className: \"post__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, post.body));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, show;\n  return _regeneratorRuntime.async(function _callee$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          id = context.query.id;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(loadData(id));\n\n        case 3:\n          show = _context4.sent;\n          return _context4.abrupt(\"return\", {\n            show: show\n          });\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/testTask/devToday/test-devtoday/pages/posts/[id].tsx"],"names":["React","useState","axios","Layout","loadData","id","get","response","data","Post","props","value","setValue","show","post","setPost","handleChange","event","target","handleSubmit","preventDefault","postId","body","deleteComment","currentTarget","dataset","title","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { NextPage } from 'next';\nimport Layout from '../components/MyLayout';\n\nconst loadData = async (id: string) => {\n  const response = await axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`);\n  const { data } = response;\n\n  return data;\n};\n\ninterface Props {\n  show: Post;\n}\n\nconst Post: NextPage<Props> = props => {\n  const [value, setValue] = useState('');\n  const [post, setPost] = useState(props.show);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    if (!value) {\n      return;\n    }\n\n    await axios.post('https://simple-blog-api.crew.red/comments', {postId: post.id, body: value });\n\n    const show = await loadData(post.id );\n    setValue('');  \n    setPost(show);\n  }\n\n  const deleteComment = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { id } = event.currentTarget.dataset;\n    await axios.delete(`https://simple-blog-api.crew.red/comments/${id}`);\n\n    const show = await loadData(post.id);\n    setPost(show);\n  }\n  \n  return (\n    <Layout>\n      <h2 className=\"post__heading\">{post.title}</h2>\n      <p className=\"post__text\">{post.body}</p>\n    </Layout>\n  )\n};\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const show = await loadData(id as string);\n\n  return { show };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}