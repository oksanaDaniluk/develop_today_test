{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\testTask\\\\devToday\\\\test-devtoday\\\\pages\\\\posts\\\\new.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Layout from '../components/MyLayout';\n\nvar New = function New() {\n  var _useState = useState(''),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(''),\n      body = _useState2[0],\n      setBody = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var handleTitleChange = function handleTitleChange(event) {\n    var value = event.target.value;\n    setTitle(value);\n  };\n\n  var handleBodyChange = function handleBodyChange(event) {\n    var value = event.target.value;\n    setBody(value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n\n            if (!(title.trim() && body.trim())) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post('https://simple-blog-api.crew.red/posts', {\n              title: title,\n              body: body\n            }));\n\n          case 4:\n            setTitle('');\n            setBody('');\n            setError(false);\n            _context.next = 10;\n            break;\n\n          case 9:\n            setError(true);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"New post\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"title-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    id: \"title-input\",\n    className: \"new-post\",\n    placeholder: \"Enter title\",\n    onChange: handleTitleChange,\n    value: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"body-texarea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"textarea\", {\n    className: \"new-post\",\n    placeholder: \"Write your post\",\n    onChange: handleBodyChange,\n    value: body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"error-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, error), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"add\")));\n};\n\nexport default New;","map":{"version":3,"sources":["C:/testTask/devToday/test-devtoday/pages/posts/new.tsx"],"names":["React","useState","axios","Layout","New","title","setTitle","body","setBody","error","setError","handleTitleChange","event","value","target","handleBodyChange","handleSubmit","preventDefault","trim","post"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,IAAMC,GAAa,GAAG,SAAhBA,GAAgB,GAAM;AAAA,kBACAH,QAAQ,CAAC,EAAD,CADR;AAAA,MACnBI,KADmB;AAAA,MACZC,QADY;;AAAA,mBAEFL,QAAQ,CAAC,EAAD,CAFN;AAAA,MAEnBM,IAFmB;AAAA,MAEbC,OAFa;;AAAA,mBAGAP,QAAQ,CAAC,KAAD,CAHR;AAAA,MAGnBQ,KAHmB;AAAA,MAGZC,QAHY;;AAK1B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAgD;AAAA,QAChEC,KADgE,GACtDD,KAAK,CAACE,MADgD,CAChED,KADgE;AAGxEP,IAAAA,QAAQ,CAACO,KAAD,CAAR;AACD,GAJD;;AAMA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,KAAD,EAAmD;AAAA,QAClEC,KADkE,GACxDD,KAAK,CAACE,MADkD,CAClED,KADkE;AAG1EL,IAAAA,OAAO,CAACK,KAAD,CAAP;AACD,GAJD;;AAMA,MAAMG,YAAY,GAAG,SAAfA,YAAe,CAAOJ,KAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,YAAAA,KAAK,CAACK,cAAN;;AADmB,kBAGfZ,KAAK,CAACa,IAAN,MAAgBX,IAAI,CAACW,IAAL,EAHD;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAIXhB,KAAK,CAACiB,IAAN,CAAW,wCAAX,EAAqD;AAAEd,cAAAA,KAAK,EAALA,KAAF;AAASE,cAAAA,IAAI,EAAJA;AAAT,aAArD,CAJW;;AAAA;AAKjBD,YAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,YAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,YAAAA,QAAQ,CAAC,KAAD,CAAR;AAPiB;AAAA;;AAAA;AASjBA,YAAAA,QAAQ,CAAC,IAAD,CAAR;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAaA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,QAAQ,EAAEL,iBAJZ;AAKE,IAAA,KAAK,EAAEN,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,QAAQ,EAAEU,gBAHZ;AAIE,IAAA,KAAK,EAAER,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,EAkBE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KADH,CAlBF,EAuBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAvBF,CAFF,CADF;AAgCD,CA9DD;;AAiEA,eAAeL,GAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { NextPage } from 'next';\nimport axios from 'axios';\nimport Layout from '../components/MyLayout';\n\nconst New: NextPage = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n  };\n\n  const handleBodyChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = event.target;\n\n    setBody(value);\n  };\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>): Promise<void> => {\n    event.preventDefault();\n\n    if (title.trim() && body.trim()) {\n      await axios.post('https://simple-blog-api.crew.red/posts', { title, body });\n      setTitle('');\n      setBody('');\n      setError(false);\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <Layout>\n      <h2>New post</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"title-input\">\n          <input\n            id=\"title-input\"\n            className=\"new-post\"\n            placeholder=\"Enter title\"\n            onChange={handleTitleChange}\n            value={title}\n          />\n        </label>\n        <label htmlFor=\"body-texarea\">\n          <textarea\n            className=\"new-post\"\n            placeholder=\"Write your post\"\n            onChange={handleBodyChange}\n            value={body}\n          />\n        </label>\n        <div className=\"error-container\">\n          {error\n\n          }\n        </div>\n        <button type=\"submit\">\n          add\n        </button>\n      </form>\n    </Layout>\n  );\n};\n\n\nexport default New;\n"]},"metadata":{},"sourceType":"module"}