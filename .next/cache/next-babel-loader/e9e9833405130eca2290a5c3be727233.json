{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\testTask\\\\devToday\\\\test-devtoday\\\\pages\\\\posts\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: auto;\\n  width: 100px;\\n  color: #fff;\\n  background: #090a0b;\\n  padding: 10px;\\n  border-radius: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport Layout from '../components/MyLayout';\nvar StyledButton = styled.button(_templateObject());\nvar StyledPostWrapper = styled.div(_templateObject2());\n\nvar Post = function Post(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      isDeleted = _useState[0],\n      setIsDeleted = _useState[1];\n\n  var handleDelete = function handleDelete() {\n    return _regeneratorRuntime.async(function handleDelete$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios[\"delete\"](\"https://simple-blog-api.crew.red/posts/\".concat(post.id)));\n\n          case 2:\n            setIsDeleted(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(StyledPostWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, isDeleted ? __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(StyledButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Back\"))) : __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, post.title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, post.body), __jsx(StyledButton, {\n    type: \"button\",\n    onClick: handleDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"remove post\")));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, response, data;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = context.query.id;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n        case 3:\n          response = _context2.sent;\n          data = response.data;\n          return _context2.abrupt(\"return\", {\n            post: data\n          });\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/testTask/devToday/test-devtoday/pages/posts/[id].tsx"],"names":["React","useState","axios","Link","styled","Layout","StyledButton","button","StyledPostWrapper","div","Post","post","isDeleted","setIsDeleted","handleDelete","id","title","body","getInitialProps","context","query","get","response","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,IAAMC,YAAY,GAAGF,MAAM,CAACG,MAAV,mBAAlB;AASA,IAAMC,iBAAiB,GAAGJ,MAAM,CAACK,GAAV,oBAAvB;;AAUA,IAAMC,IAAqB,GAAG,SAAxBA,IAAwB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACRV,QAAQ,CAAC,KAAD,CADA;AAAA,MACnCW,SADmC;AAAA,MACxBC,YADwB;;AAG1C,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACbZ,KAAK,UAAL,kDAAuDS,IAAI,CAACI,EAA5D,EADa;;AAAA;AAEnBF,YAAAA,YAAY,CAAC,IAAD,CAAZ;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAKA,SACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,GAEN,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CAFM,GAWN,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACK,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,IAAI,CAACM,IAAT,CAFF,EAGE,MAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEH,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CAZN,CADF;AA0BD,CAlCD;;AAoCAJ,IAAI,CAACQ,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbJ,UAAAA,EADa,GACNI,OAAO,CAACC,KADF,CACbL,EADa;AAAA;AAAA,2CAEEb,KAAK,CAACmB,GAAN,kDAAoDN,EAApD,EAFF;;AAAA;AAEfO,UAAAA,QAFe;AAGbC,UAAAA,IAHa,GAGJD,QAHI,CAGbC,IAHa;AAAA,4CAKd;AACLZ,YAAAA,IAAI,EAAEY;AADD,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeb,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { NextPage } from 'next';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport Layout from '../components/MyLayout';\n\nconst StyledButton = styled.button`\n  margin: auto;\n  width: 100px;\n  color: #fff;\n  background: #090a0b;\n  padding: 10px;\n  border-radius: 10px;\n`;\n\nconst StyledPostWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\ninterface Props {\n  post: Post;\n}\n\nconst Post: NextPage<Props> = ({ post }) => {\n  const [isDeleted, setIsDeleted] = useState(false);\n\n  const handleDelete = async () => {\n    await axios.delete(`https://simple-blog-api.crew.red/posts/${post.id}`);\n    setIsDeleted(true);\n  };\n\n  return (\n    <StyledPostWrapper>\n      {isDeleted\n        ? (\n          <Layout>\n            <Link href=\"/\">\n              <StyledButton>\n                Back\n              </StyledButton>\n            </Link>\n          </Layout>\n        )\n        : (\n          <Layout>\n            <h2>{post.title}</h2>\n            <p>{post.body}</p>\n            <StyledButton\n              type=\"button\"\n              onClick={handleDelete}\n            >\n              remove post\n            </StyledButton>\n          </Layout>\n        )}\n    </StyledPostWrapper>\n  );\n};\n\nPost.getInitialProps = async (context) => {\n  const { id } = context.query;\n  const response = await axios.get(`https://simple-blog-api.crew.red/posts/${id}`);\n  const { data } = response;\n\n  return {\n    post: data,\n  };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}